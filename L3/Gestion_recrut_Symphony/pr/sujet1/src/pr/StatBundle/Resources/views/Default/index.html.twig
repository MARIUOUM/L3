<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Statistique</title>
     <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

     <link rel="stylesheet" href="{{asset('bundles/stat/bootstrap/css/bootstrap.min.css')}}">
     
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="{{asset('bundles/stat/dist/css/AdminLTE.min.css')}}">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="{{asset('bundles/stat/dist/css/skins/_all-skins.min.css')}}">

      </head>
<body style="padding:20px">

<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span> 
      </button>
      <a class="navbar-brand" href="#">Statistique</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        
        <li><a href="{{asset('/app_dev.php/statistique')}}">Acceuil</a></li>
      
      </ul>
      <ul class="nav navbar-nav navbar-right">
       
      </ul>
    </div>
  </div>
</nav>

            <div class="col-md-6">
<div class="box box-danger">
                <div class="box-header with-border">
                  <h3 class="box-title">Homme / Femme</h3>
                  <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                  </div>
                </div>
                <div class="box-body">
                    <canvas id="pieCharthommefemme" style="height:250px"></canvas>
                </div><!-- /.box-body -->
              </div>

                </div><!-- /.col (RIGHT) -->



   <canvas id="areaChart" style="height:250px ;display:none"></canvas>
             <canvas id="lineChart" style="height:250px; display:none" ></canvas>   






             <div class="col-md-6">
<div class="box box-danger">
                <div class="box-header with-border">
                  <h3 class="box-title">Proportion Salaires</h3>
                  <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                  </div>
                </div>
                <div class="box-body">
                    <canvas id="pieChartsalaires" style="height:250px"></canvas>
                </div><!-- /.box-body -->
              </div>

                </div><!-- /.col (RIGHT) -->



   <canvas id="areaChart" style="height:250px ;display:none"></canvas>
             <canvas id="lineChart" style="height:250px; display:none" ></canvas>        

               


                            <div class="col-md-6">
<div class="box box-danger">
                <div class="box-header with-border">
                  <h3 class="box-title">Proportion Type de contrat</h3>
                  <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                  </div>
                </div>
                <div class="box-body">
                    <canvas id="pieCharttypecontrat" style="height:250px"></canvas>
                </div><!-- /.box-body -->
              </div>

                </div><!-- /.col (RIGHT) -->



   <canvas id="areaChart" style="height:250px ;display:none"></canvas>
             <canvas id="lineChart" style="height:250px; display:none" ></canvas>     
          

            

    <!-- jQuery 2.1.4 -->
    <script src="{{asset('bundles/stat/plugins/jQuery/jQuery-2.1.4.min.js')}}"></script>
    <!-- Bootstrap 3.3.5 -->
    <script src="{{asset('bundles/stat/bootstrap/js/bootstrap.min.js')}}"></script>
    <!-- ChartJS 1.0.1 -->
    <script src="{{asset('bundles/stat/plugins/chartjs/Chart.min.js')}}"></script>
    <!-- FastClick -->
    <script src="{{asset('bundles/stat/plugins/fastclick/fastclick.min.js')}}"></script>
    <!-- AdminLTE App -->
    <script src="{{asset('bundles/stat/dist/js/app.min.js')}}"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="{{asset('bundles/stat/dist/js/demo.js')}}"></script>
    <!-- page script -->
    <script>
      $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
    

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $("#pieCharthommefemme").get(0).getContext("2d");
        var pieChart = new Chart(pieChartCanvas);
        var PieData = [
          {
            value:{% for count in salaries %}

    {% if  loop.index ==2 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#3c8dbc",
            highlight: "#3c8dbc",
            label: "Homme"
          },
       
          {
            value:{% for count in salaries %}

    {% if  loop.index ==1 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#f56954",
            highlight: "#f56954",
            label: "Femme"
          },
    
        ];
        var pieOptions = {
          //Boolean - Whether we should show a stroke on each segment
          segmentShowStroke: true,
          //String - The colour of each segment stroke
          segmentStrokeColor: "#fff",
          //Number - The width of each segment stroke
          segmentStrokeWidth: 2,
          //Number - The percentage of the chart that we cut out of the middle
          percentageInnerCutout: 50, // This is 0 for Pie charts
          //Number - Amount of animation steps
          animationSteps: 100,
          //String - Animation easing effect
          animationEasing: "easeOutBounce",
          //Boolean - Whether we animate the rotation of the Doughnut
          animateRotate: true,
          //Boolean - Whether we animate scaling the Doughnut from the centre
          animateScale: false,
          //Boolean - whether to make the chart responsive to window resizing
          responsive: true,
          // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
          maintainAspectRatio: true,
          //String - A legend template
     
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions);















 var pieChartCanvas = $("#pieChartsalaires").get(0).getContext("2d");
        var pieChart = new Chart(pieChartCanvas);
        var PieData = [
          {
            value:{% for count in salaries %}

    {% if  loop.index ==3 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#f39c12",
            highlight: "#f39c12",
            label: ">2000"
          },

               {
            value:{% for count in salaries %}

    {% if  loop.index ==4 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#3c8dbc",
            highlight: "#3c8dbc",
            label: "(2000,3999)"
          },


               {
            value:{% for count in salaries %}

    {% if  loop.index ==5 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#d2d6de",
            highlight: "#d2d6de",
            label: "(4000,5999)"
          },

                     {
            value:{% for count in salaries %}

    {% if  loop.index ==6 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#f56954",
            highlight: "#f56954",
            label: ">=6000"
          }
       
       
    
        ];
        var pieOptions = {
          //Boolean - Whether we should show a stroke on each segment
          segmentShowStroke: true,
          //String - The colour of each segment stroke
          segmentStrokeColor: "#fff",
          //Number - The width of each segment stroke
          segmentStrokeWidth: 2,
          //Number - The percentage of the chart that we cut out of the middle
          percentageInnerCutout: 50, // This is 0 for Pie charts
          //Number - Amount of animation steps
          animationSteps: 100,
          //String - Animation easing effect
          animationEasing: "easeOutBounce",
          //Boolean - Whether we animate the rotation of the Doughnut
          animateRotate: true,
          //Boolean - Whether we animate scaling the Doughnut from the centre
          animateScale: false,
          //Boolean - whether to make the chart responsive to window resizing
          responsive: true,
          // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
          maintainAspectRatio: true,
          //String - A legend template
     
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions);











var pieChartCanvas = $("#pieCharttypecontrat").get(0).getContext("2d");
        var pieChart = new Chart(pieChartCanvas);
        var PieData = [
          {
            value:{% for count in salaries %}

    {% if  loop.index ==7 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#f39c12",
            highlight: "#f39c12",
            label: "CDD"
          },

               {
            value:{% for count in salaries %}

    {% if  loop.index ==8 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#3c8dbc",
            highlight: "#3c8dbc",
            label: "CDI"
          },


               {
            value:{% for count in salaries %}

    {% if  loop.index ==9 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#d2d6de",
            highlight: "#d2d6de",
            label: "Stagiare"
          },

                     {
            value:{% for count in salaries %}

    {% if  loop.index ==10 %}
   
{{count}}
  {% endif %}
{%endfor%},
            color: "#f56954",
            highlight: "#f56954",
            label: "Vol"
          }
       
       
    
        ];
        var pieOptions = {
          //Boolean - Whether we should show a stroke on each segment
          segmentShowStroke: true,
          //String - The colour of each segment stroke
          segmentStrokeColor: "#fff",
          //Number - The width of each segment stroke
          segmentStrokeWidth: 2,
          //Number - The percentage of the chart that we cut out of the middle
          percentageInnerCutout: 50, // This is 0 for Pie charts
          //Number - Amount of animation steps
          animationSteps: 100,
          //String - Animation easing effect
          animationEasing: "easeOutBounce",
          //Boolean - Whether we animate the rotation of the Doughnut
          animateRotate: true,
          //Boolean - Whether we animate scaling the Doughnut from the centre
          animateScale: false,
          //Boolean - whether to make the chart responsive to window resizing
          responsive: true,
          // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
          maintainAspectRatio: true,
          //String - A legend template
     
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions);































        //-------------
        //- BAR CHART -
        //-------------
        var barChartCanvas = $("#barChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartData = areaChartData;
        barChartData.datasets[1].fillColor = "#00a65a";
        barChartData.datasets[1].strokeColor = "#00a65a";
        barChartData.datasets[1].pointColor = "#00a65a";
        var barChartOptions = {
          //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
          scaleBeginAtZero: true,
          //Boolean - Whether grid lines are shown across the chart
          scaleShowGridLines: true,
          //String - Colour of the grid lines
          scaleGridLineColor: "rgba(0,0,0,.05)",
          //Number - Width of the grid lines
          scaleGridLineWidth: 1,
          //Boolean - Whether to show horizontal lines (except X axis)
          scaleShowHorizontalLines: true,
          //Boolean - Whether to show vertical lines (except Y axis)
          scaleShowVerticalLines: true,
          //Boolean - If there is a stroke on each bar
          barShowStroke: true,
          //Number - Pixel width of the bar stroke
          barStrokeWidth: 2,
          //Number - Spacing between each of the X value sets
          barValueSpacing: 5,
          //Number - Spacing between data sets within X values
          barDatasetSpacing: 1,
          //String - A legend template
        
          //Boolean - whether to make the chart responsive
          responsive: true,
          maintainAspectRatio: true
        };

        barChartOptions.datasetFill = false;
        barChart.Bar(barChartData, barChartOptions);
      });
    </script>
  </body>
</html>